/*
 * generated by Xtext 2.35.0
 */
grammar InternalTutorial;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.example.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.services.TutorialGrammarAccess;

}

@parser::members {

 	private TutorialGrammarAccess grammarAccess;

    public InternalTutorialParser(TokenStream input, TutorialGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Factory";
   	}

   	@Override
   	protected TutorialGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleFactory
entryRuleFactory returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFactoryRule()); }
	iv_ruleFactory=ruleFactory
	{ $current=$iv_ruleFactory.current; }
	EOF;

// Rule Factory
ruleFactory returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='factory'
		{
			newLeafNode(otherlv_0, grammarAccess.getFactoryAccess().getFactoryKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getFactoryAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFactoryRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getFactoryAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFactoryAccess().getItemTypesItemTypeParserRuleCall_3_0());
				}
				lv_itemTypes_3_0=ruleItemType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFactoryRule());
					}
					add(
						$current,
						"itemTypes",
						lv_itemTypes_3_0,
						"org.xtext.example.Tutorial.ItemType");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getFactoryAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleCylinderShape
entryRuleCylinderShape returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCylinderShapeRule()); }
	iv_ruleCylinderShape=ruleCylinderShape
	{ $current=$iv_ruleCylinderShape.current; }
	EOF;

// Rule CylinderShape
ruleCylinderShape returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='CylinderShape'
		{
			newLeafNode(otherlv_0, grammarAccess.getCylinderShapeAccess().getCylinderShapeKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getCylinderShapeAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='l'
		{
			newLeafNode(otherlv_2, grammarAccess.getCylinderShapeAccess().getLKeyword_2());
		}
		otherlv_3=':'
		{
			newLeafNode(otherlv_3, grammarAccess.getCylinderShapeAccess().getColonKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCylinderShapeAccess().getLengthEDoubleParserRuleCall_4_0());
				}
				lv_length_4_0=ruleEDouble
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCylinderShapeRule());
					}
					set(
						$current,
						"length",
						lv_length_4_0,
						"org.xtext.example.Tutorial.EDouble");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='cm'
		{
			newLeafNode(otherlv_5, grammarAccess.getCylinderShapeAccess().getCmKeyword_5());
		}
		otherlv_6='r'
		{
			newLeafNode(otherlv_6, grammarAccess.getCylinderShapeAccess().getRKeyword_6());
		}
		otherlv_7=':'
		{
			newLeafNode(otherlv_7, grammarAccess.getCylinderShapeAccess().getColonKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCylinderShapeAccess().getRadiusEDoubleParserRuleCall_8_0());
				}
				lv_radius_8_0=ruleEDouble
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCylinderShapeRule());
					}
					set(
						$current,
						"radius",
						lv_radius_8_0,
						"org.xtext.example.Tutorial.EDouble");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_9='cm'
		{
			newLeafNode(otherlv_9, grammarAccess.getCylinderShapeAccess().getCmKeyword_9());
		}
		otherlv_10='}'
		{
			newLeafNode(otherlv_10, grammarAccess.getCylinderShapeAccess().getRightCurlyBracketKeyword_10());
		}
	)
;

// Entry rule entryRuleBlockShape
entryRuleBlockShape returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBlockShapeRule()); }
	iv_ruleBlockShape=ruleBlockShape
	{ $current=$iv_ruleBlockShape.current; }
	EOF;

// Rule BlockShape
ruleBlockShape returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='BlockShape'
		{
			newLeafNode(otherlv_0, grammarAccess.getBlockShapeAccess().getBlockShapeKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getBlockShapeAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='l'
		{
			newLeafNode(otherlv_2, grammarAccess.getBlockShapeAccess().getLKeyword_2());
		}
		otherlv_3=':'
		{
			newLeafNode(otherlv_3, grammarAccess.getBlockShapeAccess().getColonKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBlockShapeAccess().getLengthEDoubleParserRuleCall_4_0());
				}
				lv_length_4_0=ruleEDouble
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBlockShapeRule());
					}
					set(
						$current,
						"length",
						lv_length_4_0,
						"org.xtext.example.Tutorial.EDouble");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='cm'
		{
			newLeafNode(otherlv_5, grammarAccess.getBlockShapeAccess().getCmKeyword_5());
		}
		otherlv_6='w'
		{
			newLeafNode(otherlv_6, grammarAccess.getBlockShapeAccess().getWKeyword_6());
		}
		otherlv_7=':'
		{
			newLeafNode(otherlv_7, grammarAccess.getBlockShapeAccess().getColonKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBlockShapeAccess().getWidthEDoubleParserRuleCall_8_0());
				}
				lv_width_8_0=ruleEDouble
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBlockShapeRule());
					}
					set(
						$current,
						"width",
						lv_width_8_0,
						"org.xtext.example.Tutorial.EDouble");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_9='cm'
		{
			newLeafNode(otherlv_9, grammarAccess.getBlockShapeAccess().getCmKeyword_9());
		}
		otherlv_10='h'
		{
			newLeafNode(otherlv_10, grammarAccess.getBlockShapeAccess().getHKeyword_10());
		}
		otherlv_11=':'
		{
			newLeafNode(otherlv_11, grammarAccess.getBlockShapeAccess().getColonKeyword_11());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBlockShapeAccess().getHeigthEDoubleParserRuleCall_12_0());
				}
				lv_heigth_12_0=ruleEDouble
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBlockShapeRule());
					}
					set(
						$current,
						"heigth",
						lv_heigth_12_0,
						"org.xtext.example.Tutorial.EDouble");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_13='cm'
		{
			newLeafNode(otherlv_13, grammarAccess.getBlockShapeAccess().getCmKeyword_13());
		}
		otherlv_14='}'
		{
			newLeafNode(otherlv_14, grammarAccess.getBlockShapeAccess().getRightCurlyBracketKeyword_14());
		}
	)
;

// Entry rule entryRuleItemType
entryRuleItemType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getItemTypeRule()); }
	iv_ruleItemType=ruleItemType
	{ $current=$iv_ruleItemType.current; }
	EOF;

// Rule ItemType
ruleItemType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getItemTypeAccess().getBasicItemTypeParserRuleCall_0());
		}
		this_BasicItemType_0=ruleBasicItemType
		{
			$current = $this_BasicItemType_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getItemTypeAccess().getComplexItemTypeParserRuleCall_1());
		}
		this_ComplexItemType_1=ruleComplexItemType
		{
			$current = $this_ComplexItemType_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleBasicItemType
entryRuleBasicItemType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBasicItemTypeRule()); }
	iv_ruleBasicItemType=ruleBasicItemType
	{ $current=$iv_ruleBasicItemType.current; }
	EOF;

// Rule BasicItemType
ruleBasicItemType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='basicItemType'
		{
			newLeafNode(otherlv_0, grammarAccess.getBasicItemTypeAccess().getBasicItemTypeKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getBasicItemTypeAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBasicItemTypeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getBasicItemTypeAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBasicItemTypeAccess().getMaterialMaterialEnumRuleCall_3_0());
				}
				lv_material_3_0=ruleMaterial
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBasicItemTypeRule());
					}
					set(
						$current,
						"material",
						lv_material_3_0,
						"org.xtext.example.Tutorial.Material");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getBasicItemTypeAccess().getRightParenthesisKeyword_4());
		}
		otherlv_5='{'
		{
			newLeafNode(otherlv_5, grammarAccess.getBasicItemTypeAccess().getLeftCurlyBracketKeyword_5());
		}
		otherlv_6='shape'
		{
			newLeafNode(otherlv_6, grammarAccess.getBasicItemTypeAccess().getShapeKeyword_6());
		}
		otherlv_7=':'
		{
			newLeafNode(otherlv_7, grammarAccess.getBasicItemTypeAccess().getColonKeyword_7());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getBasicItemTypeAccess().getShapeCylinderShapeParserRuleCall_8_0_0());
					}
					lv_shape_8_1=ruleCylinderShape
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBasicItemTypeRule());
						}
						set(
							$current,
							"shape",
							lv_shape_8_1,
							"org.xtext.example.Tutorial.CylinderShape");
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getBasicItemTypeAccess().getShapeBlockShapeParserRuleCall_8_0_1());
					}
					lv_shape_8_2=ruleBlockShape
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBasicItemTypeRule());
						}
						set(
							$current,
							"shape",
							lv_shape_8_2,
							"org.xtext.example.Tutorial.BlockShape");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getBasicItemTypeAccess().getColorColorParserRuleCall_9_0());
				}
				lv_color_9_0=ruleColor
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBasicItemTypeRule());
					}
					set(
						$current,
						"color",
						lv_color_9_0,
						"org.xtext.example.Tutorial.Color");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_10='markers'
			{
				newLeafNode(otherlv_10, grammarAccess.getBasicItemTypeAccess().getMarkersKeyword_10_0());
			}
			otherlv_11=':'
			{
				newLeafNode(otherlv_11, grammarAccess.getBasicItemTypeAccess().getColonKeyword_10_1());
			}
			otherlv_12='{'
			{
				newLeafNode(otherlv_12, grammarAccess.getBasicItemTypeAccess().getLeftCurlyBracketKeyword_10_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getBasicItemTypeAccess().getMarkersMarkerParserRuleCall_10_3_0());
					}
					lv_markers_13_0=ruleMarker
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBasicItemTypeRule());
						}
						add(
							$current,
							"markers",
							lv_markers_13_0,
							"org.xtext.example.Tutorial.Marker");
						afterParserOrEnumRuleCall();
					}
				)
			)+
			otherlv_14='}'
			{
				newLeafNode(otherlv_14, grammarAccess.getBasicItemTypeAccess().getRightCurlyBracketKeyword_10_4());
			}
		)?
		otherlv_15='}'
		{
			newLeafNode(otherlv_15, grammarAccess.getBasicItemTypeAccess().getRightCurlyBracketKeyword_11());
		}
	)
;

// Entry rule entryRuleComplexItemType
entryRuleComplexItemType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComplexItemTypeRule()); }
	iv_ruleComplexItemType=ruleComplexItemType
	{ $current=$iv_ruleComplexItemType.current; }
	EOF;

// Rule ComplexItemType
ruleComplexItemType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='complexItemType'
		{
			newLeafNode(otherlv_0, grammarAccess.getComplexItemTypeAccess().getComplexItemTypeKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getComplexItemTypeAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getComplexItemTypeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getComplexItemTypeAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='components'
		{
			newLeafNode(otherlv_3, grammarAccess.getComplexItemTypeAccess().getComponentsKeyword_3());
		}
		otherlv_4=':'
		{
			newLeafNode(otherlv_4, grammarAccess.getComplexItemTypeAccess().getColonKeyword_4());
		}
		otherlv_5='{'
		{
			newLeafNode(otherlv_5, grammarAccess.getComplexItemTypeAccess().getLeftCurlyBracketKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getComplexItemTypeAccess().getComponentsComponentParserRuleCall_6_0());
				}
				lv_components_6_0=ruleComponent
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getComplexItemTypeRule());
					}
					add(
						$current,
						"components",
						lv_components_6_0,
						"org.xtext.example.Tutorial.Component");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getComplexItemTypeAccess().getComponentsComponentParserRuleCall_7_0());
				}
				lv_components_7_0=ruleComponent
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getComplexItemTypeRule());
					}
					add(
						$current,
						"components",
						lv_components_7_0,
						"org.xtext.example.Tutorial.Component");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getComplexItemTypeAccess().getRightCurlyBracketKeyword_8());
		}
		otherlv_9='connections'
		{
			newLeafNode(otherlv_9, grammarAccess.getComplexItemTypeAccess().getConnectionsKeyword_9());
		}
		otherlv_10=':'
		{
			newLeafNode(otherlv_10, grammarAccess.getComplexItemTypeAccess().getColonKeyword_10());
		}
		otherlv_11='{'
		{
			newLeafNode(otherlv_11, grammarAccess.getComplexItemTypeAccess().getLeftCurlyBracketKeyword_11());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getComplexItemTypeAccess().getItemConnectionsItemConnectionParserRuleCall_12_0());
				}
				lv_itemConnections_12_0=ruleItemConnection
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getComplexItemTypeRule());
					}
					add(
						$current,
						"itemConnections",
						lv_itemConnections_12_0,
						"org.xtext.example.Tutorial.ItemConnection");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_13='}'
		{
			newLeafNode(otherlv_13, grammarAccess.getComplexItemTypeAccess().getRightCurlyBracketKeyword_13());
		}
		otherlv_14='}'
		{
			newLeafNode(otherlv_14, grammarAccess.getComplexItemTypeAccess().getRightCurlyBracketKeyword_14());
		}
	)
;

// Entry rule entryRuleColor
entryRuleColor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getColorRule()); }
	iv_ruleColor=ruleColor
	{ $current=$iv_ruleColor.current; }
	EOF;

// Rule Color
ruleColor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='color'
		{
			newLeafNode(otherlv_0, grammarAccess.getColorAccess().getColorKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getColorAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getColorRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"org.xtext.example.Tutorial.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getColorAccess().getColonKeyword_2());
		}
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getColorAccess().getLeftCurlyBracketKeyword_3());
		}
		otherlv_4='r'
		{
			newLeafNode(otherlv_4, grammarAccess.getColorAccess().getRKeyword_4());
		}
		otherlv_5=':'
		{
			newLeafNode(otherlv_5, grammarAccess.getColorAccess().getColonKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getColorAccess().getRedEIntParserRuleCall_6_0());
				}
				lv_red_6_0=ruleEInt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getColorRule());
					}
					set(
						$current,
						"red",
						lv_red_6_0,
						"org.xtext.example.Tutorial.EInt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7='g'
		{
			newLeafNode(otherlv_7, grammarAccess.getColorAccess().getGKeyword_7());
		}
		otherlv_8=':'
		{
			newLeafNode(otherlv_8, grammarAccess.getColorAccess().getColonKeyword_8());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getColorAccess().getGreenEIntParserRuleCall_9_0());
				}
				lv_green_9_0=ruleEInt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getColorRule());
					}
					set(
						$current,
						"green",
						lv_green_9_0,
						"org.xtext.example.Tutorial.EInt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_10='b'
		{
			newLeafNode(otherlv_10, grammarAccess.getColorAccess().getBKeyword_10());
		}
		otherlv_11=':'
		{
			newLeafNode(otherlv_11, grammarAccess.getColorAccess().getColonKeyword_11());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getColorAccess().getBlueEIntParserRuleCall_12_0());
				}
				lv_blue_12_0=ruleEInt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getColorRule());
					}
					set(
						$current,
						"blue",
						lv_blue_12_0,
						"org.xtext.example.Tutorial.EInt");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_13='}'
		{
			newLeafNode(otherlv_13, grammarAccess.getColorAccess().getRightCurlyBracketKeyword_13());
		}
	)
;

// Entry rule entryRuleMarker
entryRuleMarker returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMarkerRule()); }
	iv_ruleMarker=ruleMarker
	{ $current=$iv_ruleMarker.current; }
	EOF;

// Rule Marker
ruleMarker returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_ID
			{
				newLeafNode(lv_name_0_0, grammarAccess.getMarkerAccess().getNameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getMarkerRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"org.eclipse.xtext.common.Terminals.ID");
			}
		)
	)
;

// Entry rule entryRuleComponent
entryRuleComponent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComponentRule()); }
	iv_ruleComponent=ruleComponent
	{ $current=$iv_ruleComponent.current; }
	EOF;

// Rule Component
ruleComponent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getComponentAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getComponentRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getComponentAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getComponentRule());
					}
				}
				otherlv_2=RULE_ID
				{
					newLeafNode(otherlv_2, grammarAccess.getComponentAccess().getItemTypeBasicItemTypeCrossReference_2_0());
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getComponentAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleItemConnection
entryRuleItemConnection returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getItemConnectionRule()); }
	iv_ruleItemConnection=ruleItemConnection
	{ $current=$iv_ruleItemConnection.current; }
	EOF;

// Rule ItemConnection
ruleItemConnection returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getItemConnectionRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getItemConnectionAccess().getComponentAComponentCrossReference_0_0());
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getItemConnectionAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getItemConnectionRule());
					}
				}
				otherlv_2=RULE_ID
				{
					newLeafNode(otherlv_2, grammarAccess.getItemConnectionAccess().getMarkerAMarkerCrossReference_2_0());
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getItemConnectionAccess().getRightParenthesisKeyword_3());
		}
		otherlv_4='<->'
		{
			newLeafNode(otherlv_4, grammarAccess.getItemConnectionAccess().getLessThanSignHyphenMinusGreaterThanSignKeyword_4());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getItemConnectionRule());
					}
				}
				otherlv_5=RULE_ID
				{
					newLeafNode(otherlv_5, grammarAccess.getItemConnectionAccess().getComponentBComponentCrossReference_5_0());
				}
			)
		)
		otherlv_6='('
		{
			newLeafNode(otherlv_6, grammarAccess.getItemConnectionAccess().getLeftParenthesisKeyword_6());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getItemConnectionRule());
					}
				}
				otherlv_7=RULE_ID
				{
					newLeafNode(otherlv_7, grammarAccess.getItemConnectionAccess().getMarkerBMarkerCrossReference_7_0());
				}
			)
		)
		otherlv_8=')'
		{
			newLeafNode(otherlv_8, grammarAccess.getItemConnectionAccess().getRightParenthesisKeyword_8());
		}
	)
;

// Entry rule entryRuleEString
entryRuleEString returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEStringRule()); }
	iv_ruleEString=ruleEString
	{ $current=$iv_ruleEString.current.getText(); }
	EOF;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRING_0=RULE_STRING
		{
			$current.merge(this_STRING_0);
		}
		{
			newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0());
		}
		    |
		this_ID_1=RULE_ID
		{
			$current.merge(this_ID_1);
		}
		{
			newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleEDouble
entryRuleEDouble returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEDoubleRule()); }
	iv_ruleEDouble=ruleEDouble
	{ $current=$iv_ruleEDouble.current.getText(); }
	EOF;

// Rule EDouble
ruleEDouble returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='-'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getEDoubleAccess().getHyphenMinusKeyword_0());
			}
		)?
		(
			this_INT_1=RULE_INT
			{
				$current.merge(this_INT_1);
			}
			{
				newLeafNode(this_INT_1, grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_1());
			}
		)?
		kw='.'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getEDoubleAccess().getFullStopKeyword_2());
		}
		this_INT_3=RULE_INT
		{
			$current.merge(this_INT_3);
		}
		{
			newLeafNode(this_INT_3, grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_3());
		}
		(
			(
				kw='E'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getEDoubleAccess().getEKeyword_4_0_0());
				}
				    |
				kw='e'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getEDoubleAccess().getEKeyword_4_0_1());
				}
			)
			(
				kw='-'
				{
					$current.merge(kw);
					newLeafNode(kw, grammarAccess.getEDoubleAccess().getHyphenMinusKeyword_4_1());
				}
			)?
			this_INT_7=RULE_INT
			{
				$current.merge(this_INT_7);
			}
			{
				newLeafNode(this_INT_7, grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_4_2());
			}
		)?
	)
;

// Entry rule entryRuleEInt
entryRuleEInt returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEIntRule()); }
	iv_ruleEInt=ruleEInt
	{ $current=$iv_ruleEInt.current.getText(); }
	EOF;

// Rule EInt
ruleEInt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='-'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getEIntAccess().getHyphenMinusKeyword_0());
			}
		)?
		this_INT_1=RULE_INT
		{
			$current.merge(this_INT_1);
		}
		{
			newLeafNode(this_INT_1, grammarAccess.getEIntAccess().getINTTerminalRuleCall_1());
		}
	)
;

// Rule Material
ruleMaterial returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='WOOD'
			{
				$current = grammarAccess.getMaterialAccess().getWOODEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getMaterialAccess().getWOODEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='STEEL'
			{
				$current = grammarAccess.getMaterialAccess().getSTEELEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getMaterialAccess().getSTEELEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='GOLD'
			{
				$current = grammarAccess.getMaterialAccess().getGOLDEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getMaterialAccess().getGOLDEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='COPPER'
			{
				$current = grammarAccess.getMaterialAccess().getCOPPEREnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getMaterialAccess().getCOPPEREnumLiteralDeclaration_3());
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
